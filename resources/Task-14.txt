TASK-14
LOGGING AND MOCKING

PARAMETERS:
- configName =  CONFIG_FILENAME
- consoleLevel = CONFIG
- fileLevel = CONFIG
- fileSize = 39250
- numFiles = 3
- httpHeader = authorization: Basic
- httpResponseCode = 114
- httpResponseDelay = 3731


(1) Логування

(1.1) За прикладом з лекції (HJAQALesson22), взявши за початкову модель класи із д/з №№ 7, 8 або 9 та метод main(),
      що робить обʼєкти із форматованого текстового файлу, імплементувати логування за допомогою java.util.logging.

      Лог мусить містити наступні записи:

      - (a) маркер початку процесу із іменем файлу, що зчитується (рівень CONFIG)
      - (b) маркер завершення процесу із кількістю імпортованих файлів (рівень CONFIG)
      - (c) запис створення кожного обʼєкту, кожен тип обʼєкту - власним рівнем, починаючи з верхнього (SEVERE, крім CONFIG)
      - (d) Імʼя конфігураційного файла передавати за допомогою змінної оточення згідно поля configName.

(1.2) Імплементувати виведення логів на консоль та у файл, мінімальний рівень, що виводиться - згідно
      полей consoleLevel та fileLevel відповідньо.

(1.3) Імплементувати ротацію файлів логу, розмір файла та кількість файлів - поля fileSize та numFiles відповідньо.


(2) Мокінг

(2.1) За прикладом з лекції (HJAQALesson23) створити тестовий клас, що використовує мок-сервіс за допомогою WireMock.

(2.2) Використати метод urlEqualTo() для матчингу URL, що викликається. URL вигадати самостійно.

(2.3) Матчити хедер HTTP реквесту згідно з завданням, поле httpHeader.

(2.4) Повертати HTTP код та робити затримку відповіді згідно з завданням: поля httpResponseCode та httpResponseDelay,
      відповідньо.

(2.5) Асертити код респонса та довжину затримки.