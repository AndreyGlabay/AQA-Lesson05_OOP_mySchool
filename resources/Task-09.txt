(1) До "великого" вхідного файлу, що згенеровано за допомогою ШІ, додати поле id.
Воно мусить бути першим полем.
Додати відповідне поле до базового класу моделі даних, оформити аксесори, додати до toString() відповідного класу.

(2) Імпортувати усі обʼєкти у Collection відповідного типу
(усі колекції є похідними від List чи Set, усі перевірені та працюють).

(3) Перетворити Collection на відповідну кількість Stream'ів та за допомогою методів Stream та Lambda функцій зробити наступне:
    (3.1) Відсорутвати за довільно вибраним числовим полем згідно SortOrder,
    пропустити перші SortSkip значень та вивести SortOut перших.

    (3.2) Відфільтрувати за значенням довільно вибраного числового поля так,
    щоб відсіяти приблизно половину значень. Вивести які завгодно значення у кількісті FilterOut.

    (3.3) Зробити Map<Integer, String>, де key = значення поля id, value = красива репрезентація Вашого обʼєкту у строковій формі.

Значення до завдань взяти у https://docs.google.com/spreadsheets/d/1jQ6dzDsVYr8fTBhLE8wIsRLMfa7mgtgCM8e9e-dlUF0/edit?usp=sharing
Andriy Glabay:
* Collection: Stack;
* SortOrder: ASC;
* SortSkip: 7;
* SortOut: 13;
* FilterOut: 24;

-----------------------------------------------------------------------------------------------------------------
(1) Поле id, наразі "studentId" існувало з самого початку проєкту.
Воно є першим полем, міститься і у файлі з даними, і у toString() суперкласу. Також є і аксесори для нього.

(2) Орідженом для колекції був обраний LinkedList.
Причина:
    * щоб була гарна продуктивність додання/видалення елементів у будь-якому місці списку
      (елементами є студенти, які поділені до чотирьох галузей, айдішки мають наскрізну нумерацію лише у рамках своєї галузі,
      тобто додання нового студенту, за логікою проєкту, повинне відбуватися у будь-якому місці загального списку;
       видалення студенту не пов'язано з логікою ай-ді, але звичайно ж може знадобиться видалити студента з будь-якого місця);
     * розмір коллекції невідомий заздалегідь
       (авже ж невідомо скільки ще студентів приєднаються до ай-ті курсів).
 (2.1) Отже спочатку був заімплементований LinkedList та Stream.
 (2.2) ArrayList з попередньої домашки був перетворений на LinkedList (щоб усе звести до одного типу).
 (2.3) Заімпортував елементи до Stack, та перевірив, що усе працює за допомогою виводу до консолі "Elements in the Stack" та Debug.
 (2.4) Створив 4 Стаки, та заімпортував до них елементи, відповідно до їх підкласів:
       екземпляри PM - до pmStack, тощо.

 (3) 4 Stacks були перетворені на 4 Streams, та перевірені за допомогою виводу до консолі;


